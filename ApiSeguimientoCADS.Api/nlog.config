<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="logs\nlog-internal.log">
	
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<variable name="ubicacionLog" value="${configsetting:item=NLogConfig.LogBasePath:default=logs}"/>

	<targets>
		<!-- Log general de la API -->
		<target xsi:type="AsyncWrapper" name="asyncFile" queueLimit="10000" overflowAction="Discard">
			<target xsi:type="File"
			  name="fileTarget"
			  fileName="${ubicacionLog}\${shortdate}.log"
			  archiveFileName="${ubicacionLog}\archive\${shortdate}-{#}.log"
			  layout="${longdate}${newline}Nivel: ${level:uppercase=true}${newline}Máquina: ${machinename}${newline}X-Request-ID: ${scopeproperty:X-Request-ID:whenEmpty=N/A}${newline}Logger: ${logger}${newline}Mensaje: ${message}${newline}${onexception:INNER EXCEPTION\:${newline}${exception:format=ToString}${newline}}--------------------------------------------------${newline}"
			  maxArchiveFiles="10"
			  archiveAboveSize="314572800"
			  archiveNumbering="Rolling"
			  archiveEvery="Day"
			  concurrentWrites="true"
			  keepFileOpen="false"
			  encoding="utf-8" />
		</target>
		
		<!-- Log de errores con información detallada -->
		<target xsi:type="AsyncWrapper" name="asyncErrorFile" queueLimit="5000" overflowAction="Block">
			<target xsi:type="File"
			  name="errorFileTarget"
			  fileName="${ubicacionLog}\errors-${shortdate}.log"
			  archiveFileName="${ubicacionLog}\archive\errors-${shortdate}-{#}.log"
			  layout="${longdate}${newline}========== ERROR ==========${newline}Nivel: ${level:uppercase=true}${newline}X-Request-ID: ${scopeproperty:X-Request-ID:whenEmpty=N/A}${newline}Máquina: ${machinename}${newline}Método HTTP: ${aspnet-request-method}${newline}URL: ${aspnet-request-url}${newline}IP Cliente: ${aspnet-request-ip}${newline}User-Agent: ${aspnet-request-useragent}${newline}Usuario: ${aspnet-user-identity:whenEmpty=Anónimo}${newline}Logger: ${logger}${newline}Mensaje: ${message}${newline}${onexception:INNER EXCEPTION\:${newline}${exception:format=ToString}${newline}StackTrace\:${newline}${exception:format=StackTrace}${newline}}========================================${newline}${newline}"
			  maxArchiveFiles="10"
			  archiveAboveSize="314572800"
			  archiveNumbering="Rolling"
			  archiveEvery="Day"
			  concurrentWrites="true"
			  keepFileOpen="false"
			  encoding="utf-8" />
		</target>
		
		<!-- Console para desarrollo -->
		<target name="console" xsi:type="ColoredConsole"
            layout="[${time}] [${uppercase:${level}}] [${scopeproperty:X-Request-ID:whenEmpty=N/A}] ${logger:shortName=true} - ${message} ${exception:format=message}">
			<highlight-row condition="level == LogLevel.Debug" foregroundColor="Gray" />
			<highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
			<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
		</target>
	</targets>
	
	<rules>
		<!-- Filtrar logs verbosos de Microsoft -->
		<logger name="Microsoft.AspNetCore.Hosting.Diagnostics" maxlevel="Info" final="true" />
		<logger name="Microsoft.AspNetCore.Mvc.Infrastructure.*" maxlevel="Warn" final="true" />
		<logger name="Microsoft.AspNetCore.Routing.*" maxlevel="Warn" final="true" />
		<logger name="Microsoft.EntityFrameworkCore.*" maxlevel="Warn" final="true" />
		<logger name="System.Net.Http.HttpClient.*" maxlevel="Warn" final="true" />
		
		<!-- Errores van al log de errores -->
		<logger name="*" minlevel="Error" writeTo="asyncErrorFile" />
		
		<!-- Todos los logs -->
		<logger name="*" minlevel="Debug" writeTo="console,asyncFile" />
	</rules>
</nlog>